{"version":3,"sources":["utils/color.js","utils/ServiceApi.js","Components/Searchbar/Searchbar.js","Components/App.js","index.js","Components/Searchbar/Searchbar.module.css"],"names":["hexToRgb","hex","result","exec","r","parseInt","g","b","dynamicColorChange","start","end","temp","minTemp","startRGB","endRGB","API_KEY","Searchbar","onSubmit","useState","query","setQuery","className","s","SearchForm","event","preventDefault","trim","alert","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","App","latt","setLatt","long","setLong","weatherData","setWeatherData","error","setError","useEffect","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","getWeather","getWeatherByQuery","fetch","then","ok","json","Promise","reject","Error","getWeatherByCoordsAPI","data","icon","weather","description","main","catch","cityName","temp_min","temp_max","name","country","sys","coord","message","style","backgroundColor","src","alt","min","max","target","step","lat","lon","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.87af221f.chunk.js","sourcesContent":["function hexToRgb(hex) {\r\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  return result\r\n    ? {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16),\r\n      }\r\n    : null;\r\n}\r\n\r\nconst dynamicColorChange = function (start, end, temp, minTemp) {\r\n  const startRGB = hexToRgb(start);\r\n  const endRGB = hexToRgb(end);\r\n\r\n  const resR = startRGB.r + ((endRGB.r - startRGB.r) * (temp - minTemp)) / 20;\r\n  const resG = startRGB.g + ((endRGB.g - startRGB.g) * (temp - minTemp)) / 20;\r\n  const resB = startRGB.b + ((endRGB.b - startRGB.b) * (temp - minTemp)) / 20;\r\n\r\n  const resultColor = \"rgb(\" + resR + \",\" + resG + \",\" + resB + \")\";\r\n  return resultColor;\r\n};\r\n\r\nexport const makeBackgroundColor = function (temp) {\r\n  let c = \"\";\r\n  if (temp <= -10) {\r\n    c = \"#00ffff\";\r\n    return c;\r\n  }\r\n  if (temp > -10 && temp < 10) {\r\n    c = dynamicColorChange(\"#00ffff\", \"#fff700\", temp, -10);\r\n    return c;\r\n  }\r\n\r\n  if (temp === 10) {\r\n    c = \"#fff700\";\r\n    return c;\r\n  }\r\n  if (temp > 10 && temp < 30) {\r\n    c = dynamicColorChange(\"#fff700\", \"#ff8c00\", temp, 10);\r\n    return c;\r\n  }\r\n  if (temp >= 30) {\r\n    c = \"#ff8c00\";\r\n    return c;\r\n  }\r\n  return \"#ffffff\";\r\n};\r\n","const API_KEY = \"5595ed04020806764d837300571a7295\";\r\n\r\nexport const getWeatherByCoordsAPI = ({ latt, long }) => {\r\n  return fetch(\r\n    `https://api.openweathermap.org/data/2.5/weather?lat=${latt}&lon=${long}&units=metric&appid=${API_KEY}`\r\n  ).then((r) => {\r\n    if (r.ok) {\r\n      return r.json();\r\n    }\r\n    return Promise.reject(\r\n      new Error(`No results were found for ${latt}, ${long}`)\r\n    );\r\n  });\r\n};\r\n\r\nexport const getWeatherByCityName = (cityName) => {\r\n  return fetch(\r\n    `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&units=metric&appid=${API_KEY}`\r\n  ).then((r) => {\r\n    if (r.ok) {\r\n      return r.json();\r\n    }\r\n    return Promise.reject(new Error(`No results were found for ${cityName}`));\r\n  });\r\n};\r\n","import React, { useState } from \"react\";\r\nimport s from \"./Searchbar.module.css\";\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  const handleNameChange = (event) => {\r\n    setQuery(event.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (query.trim() === \"\") {\r\n      alert(\"Enter your request\");\r\n      return;\r\n    }\r\n\r\n    onSubmit(query);\r\n  };\r\n\r\n  return (\r\n    <header className={s.Searchbar}>\r\n      <form className={s.SearchForm} onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className={s.SearchFormButton}>\r\n          <span className={s.SearchFormButtonLabel}>Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className={s.SearchFormInput}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Enter the name of the city\"\r\n          value={query}\r\n          onChange={handleNameChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeBackgroundColor } from \"../utils/color\";\r\nimport {\r\n  getWeatherByCityName,\r\n  getWeatherByCoordsAPI,\r\n} from \"../utils/ServiceApi\";\r\nimport Searchbar from \"./Searchbar/Searchbar\";\r\n\r\nexport default function App() {\r\n  const [latt, setLatt] = useState(\"\");\r\n  const [long, setLong] = useState(\"\");\r\n  const [query, setQuery] = useState(\"\");\r\n  const [weatherData, setWeatherData] = useState({});\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(function (position) {\r\n      setLatt(position.coords.latitude);\r\n      setLong(position.coords.longitude);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (latt === \"\" || long === \"\") {\r\n      return;\r\n    }\r\n    getWeather();\r\n  }, [latt, long]); /* eslint-disable-line*/\r\n\r\n  useEffect(() => {\r\n    if (query === \"\") {\r\n      return;\r\n    }\r\n    getWeatherByQuery();\r\n  }, [query]); /* eslint-disable-line*/\r\n\r\n  const getWeather = () => {\r\n    getWeatherByCoordsAPI({ latt, long })\r\n      .then((data) => {\r\n        setWeatherData({\r\n          icon: data.weather[0].icon,\r\n          description: data.weather[0].description,\r\n          temp: data.main.temp,\r\n          // temp_min: data.main.temp_min,\r\n          // temp_max: data.main.temp_max,\r\n          // name: data.name,\r\n          // country: data.sys.country,\r\n          // coord: data.coord,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setError(error);\r\n      });\r\n  };\r\n\r\n  const getWeatherByQuery = () => {\r\n    getWeatherByCityName(query)\r\n      .then((data) => {\r\n        setWeatherData({\r\n          icon: data.weather[0].icon,\r\n          description: data.weather[0].description,\r\n          temp: data.main.temp,\r\n          temp_min: data.main.temp_min,\r\n          temp_max: data.main.temp_max,\r\n          name: data.name,\r\n          country: data.sys.country,\r\n          coord: data.coord,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setError(error);\r\n      });\r\n  };\r\n\r\n  const handleFormSubmit = (query) => {\r\n    setQuery(query);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setWeatherData({ temp: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Searchbar onSubmit={handleFormSubmit} />\r\n      {error && (\r\n        <div className=\"container\">\r\n          <h4>{error.message}</h4>\r\n        </div>\r\n      )}\r\n      {latt && long && !error && !query && (\r\n        <div\r\n          className=\"container\"\r\n          style={{\r\n            backgroundColor: makeBackgroundColor(weatherData.temp),\r\n          }}\r\n        >\r\n          {weatherData.icon && (\r\n            <img\r\n              src={`http://openweathermap.org/img/wn/${weatherData.icon}@2x.png`}\r\n              alt={weatherData.description}\r\n              className=\"icon\"\r\n            />\r\n          )}\r\n          {weatherData.temp && (\r\n            <div className=\"slidecontainer\">\r\n              <label className=\"label\">\r\n                Temperature: {weatherData.temp} °С\r\n                <input\r\n                  className=\"slider\"\r\n                  type=\"range\"\r\n                  min=\"-50\"\r\n                  max=\"50\"\r\n                  value={weatherData.temp}\r\n                  onChange={handleChange}\r\n                  step=\"1\"\r\n                />\r\n              </label>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n      {query && weatherData.coord && (\r\n        <div className=\"resultContainer\">\r\n          <img\r\n            src={`http://openweathermap.org/img/wn/${weatherData.icon}@2x.png`}\r\n            alt={weatherData.description}\r\n          />\r\n          <div className=\"wrapper\">\r\n            <p className=\"accent\">\r\n              {weatherData.name}, {weatherData.country}\r\n              <span className=\"description\">{weatherData.description}</span>\r\n            </p>\r\n            <p className=\"tempData\">\r\n              <span className=\"temp\">{weatherData.temp} °С</span> temperature\r\n              from\r\n              {weatherData.temp_min} to {weatherData.temp_max} °С\r\n            </p>\r\n            <p>\r\n              Geo coords{\" \"}\r\n              <span className=\"accent\">\r\n                [{weatherData.coord.lat}, {weatherData.coord.lon}]\r\n              </span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__3y25L\",\"SearchForm\":\"Searchbar_SearchForm__lDveI\",\"SearchFormButton\":\"Searchbar_SearchFormButton__2Fh57\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__1uJGp\",\"SearchFormInput\":\"Searchbar_SearchFormInput__2NHD9\"};"],"sourceRoot":""}